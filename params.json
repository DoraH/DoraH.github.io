{"name":"Dorah.GitHub.io","tagline":"Practical Machine Learning Course Project","body":"# Practical Machine Learning - Course Project\r\n\r\n**Background**\r\n\r\nUsing devices such as *Jawbone Up, Nike FuelBand*, and *Fitbit* it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways: \r\n\r\n- exactly according to the specification (Class A)\r\n- throwing the elbows to the front (Class B)\r\n- lifting the dumbbell only halfway (Class C)\r\n- lowering the dumbbell only halfway (Class D)\r\n- throwing the hips to the front (Class E)\r\n\r\nClass A corresponds to the specified execution of the exercise, while the other 4 classes correspond to common mistakes.\r\n\r\nMore information is available from the website here: <http://groupware.les.inf.puc-rio.br/har> (see the section on the Weight Lifting Exercise Dataset). \r\n\r\n**Data**\r\n\r\nThe training data for this project are available here: \r\n\r\n<https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv>\r\n\r\nThe test data are available here: \r\n\r\n<https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv>\r\n\r\nThe data for this project come from this source: <http://groupware.les.inf.puc-rio.br/har>.\r\n\r\n**What you should submit**\r\n\r\nThe goal of your project is to predict the manner in which they did the exercise. This is the \"classe\" variable in the training set. You may use any of the other variables to predict with. You should create a report describing how you built your model, how you used cross validation, what you think the expected out of sample error is, and why you made the choices you did. You will also use your prediction model to predict 20 different test cases. \r\n\r\n1. Your submission should consist of a link to a Github repo with your R markdown and compiled HTML file describing your analysis. Please constrain the text of the writeup to < 2000 words and the number of figures to be less than 5. It will make it easier for the graders if you submit a repo with a gh-pages branch so the HTML page can be viewed online (and you always want to make it easy on graders :-).\r\n2. You should also apply your machine learning algorithm to the 20 test cases available in the test data above. Please submit your predictions in appropriate format to the programming assignment for automated grading. See the programming assignment for additional details. \r\n\r\n##Reproducibility\r\nIn order to reproduce the results below, we need to set a seed.\r\nPackages such as caret, randomForest, rpart and rattle are required as well.\r\n\r\n**Loading Required Libraries**\r\n```{r}\r\nlibrary(caret)\r\nlibrary(randomForest)\r\nlibrary(rpart)\r\nlibrary(rpart.plot)\r\nlibrary(rattle)\r\n```\r\n\r\n**Set Seed**\r\n```{r}\r\nset.seed(1234)\r\n```\r\n\r\n##Loading and Cleaning Data\r\nIn this section, after loading the data, columns with missing values and irrelevant variables will be delected.\r\n\r\n```{r,results='hide'}\r\n# URL for the training data set\r\ntrainUrl <- \"http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\"\r\n\r\n# URL for the testing data set\r\ntestUrl <- \"http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\"\r\n\r\n# Storing data files in memory\r\ntraining <- read.csv(url(trainUrl), na.strings=c(\"NA\",\"#DIV/0!\",\"\"))\r\ntesting <- read.csv(url(testUrl), na.strings=c(\"NA\",\"#DIV/0!\",\"\"))\r\n\r\n# Checking for the number of variables and observations\r\ndim(training)\r\ndim(testing)\r\n\r\n# Delete columns with missing values\r\ntraining1 <- training[,colSums(is.na(training)) == 0]\r\ntesting1 <- testing[,colSums(is.na(testing)) == 0]\r\n\r\n# Deleting irrelevant variables (user_name, raw_timestamp_part_1, raw_timestamp_part_, 2 cvtd_timestamp, new_window, and num_window; columns 1 to 7)\r\ntraining1 <- training1[,-c(1:7)]\r\ntesting1 <- testing1[,-c(1:7)]\r\n\r\n# Checking for the number of variables and observations for the new data set\r\ndim(training1)\r\ndim(testing1)\r\n```\r\n\r\n##Partioning the Training Data Set\r\nThere are 19,622 observations in the training set, in order to reduce time and perform cross-validation, the training data set is partionned into 2 sets, myTraining (75%) and myTesting (25%).\r\n\r\n```{r}\r\ninTrain <- createDataPartition(y=training1$classe, p=0.75, list=FALSE)\r\nmyTraining <- training1[inTrain, ]\r\nmyTesting <- training1[-inTrain, ]\r\ndim(myTraining)\r\ndim(myTesting)\r\n```\r\n\r\n##1st Prediction Model - Decision Tree\r\n\r\n```{r}\r\nmodFit1 <- rpart(classe ~ ., data=myTraining, method=\"class\")\r\n\r\n# Predicting\r\nprediction1 <- predict(modFit1, myTesting, type = \"class\")\r\n\r\n# Plotting\r\nfancyRpartPlot(modFit1, cex=.5,under.cex=1,shadow.offset=0)\r\n\r\n# Testing results on myTesting data set\r\nconfusionMatrix(prediction1, myTesting$classe)\r\n```\r\n\r\n##2nd Prediction Model - Random Forest\r\n\r\n```{r}\r\nmodFit2 <- randomForest(classe ~., data=myTraining, method=\"class\")\r\n\r\n# Predicting\r\nprediction2 <- predict(modFit2, myTesting, type = \"class\")\r\n\r\n# Testing results on myTesting data set\r\nconfusionMatrix(prediction2, myTesting$classe)\r\n```\r\n\r\n*Conclusion*\r\nRandom Forest model will be choosen as our final model as it has a higher accuracy of 0.991, as compared to Decision Tree model, which has an accuracy of 0.724. The expected out-of-sample error is calculated as 1 - accuracy for predictions made against the cross-validation set. And since our testing data set comprises of only 20 cases, we can expect that very few of the test samples will be missclassified.\r\n\r\n##Generating Files to submit as answers for the Assignment\r\n\r\n```{r}\r\n# Applying Random Forest algorithm to the original Testing data set\r\npredictionfinal <- predict(modFit2, testing, type = \"class\")\r\npredictionfinal\r\n\r\n\r\n# Generating files with predictions to submit for assignment\r\npml_write_files = function(x){\r\n  n = length(x)\r\n  for(i in 1:n){\r\n    filename = paste0(\"problem_id_\",i,\".txt\")\r\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\r\n  }\r\n}\r\n\r\npml_write_files(predictionfinal)\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}